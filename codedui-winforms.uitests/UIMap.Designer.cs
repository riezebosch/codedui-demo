// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace codedui_winforms.uitests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// EnterNumber - Use 'EnterNumberParams' to pass parameters into this method.
        /// </summary>
        public void EnterNumber()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIForm1Window.UITextBox1Window.UITextBox1Edit;
            WinButton uIButton1Button = this.UIForm1Window.UIButton1Window.UIButton1Button;
            #endregion

            // Type '5' in 'textBox1' text box
            uITextBox1Edit.Text = this.EnterNumberParams.UITextBox1EditText;

            // Click 'button1' button
            Mouse.Click(uIButton1Button, new Point(58, 23));
        }
        
        /// <summary>
        /// Assert - Use 'AssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertOutput()
        {
            #region Variable Declarations
            WinText uIItem5Text = this.UIForm1Window.UIItem5Window.UIItem5Text;
            #endregion

            // Verify that the 'DisplayText' property of '-5' label equals '5'
            Assert.AreEqual(this.AssertExpectedValues.UIItem5TextDisplayText, uIItem5Text.DisplayText);
        }
        
        #region Properties
        public virtual EnterNumberParams EnterNumberParams
        {
            get
            {
                if ((this.mEnterNumberParams == null))
                {
                    this.mEnterNumberParams = new EnterNumberParams();
                }
                return this.mEnterNumberParams;
            }
        }
        
        public virtual AssertExpectedValues AssertExpectedValues
        {
            get
            {
                if ((this.mAssertExpectedValues == null))
                {
                    this.mAssertExpectedValues = new AssertExpectedValues();
                }
                return this.mAssertExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private EnterNumberParams mEnterNumberParams;
        
        private AssertExpectedValues mAssertExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterNumber'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EnterNumberParams
    {
        
        #region Fields
        /// <summary>
        /// Type '5' in 'textBox1' text box
        /// </summary>
        public string UITextBox1EditText = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '-5' label equals '5'
        /// </summary>
        public string UIItem5TextDisplayText = "5";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        
        public UIButton1Window UIButton1Window
        {
            get
            {
                if ((this.mUIButton1Window == null))
                {
                    this.mUIButton1Window = new UIButton1Window(this);
                }
                return this.mUIButton1Window;
            }
        }
        
        public UIItem5Window UIItem5Window
        {
            get
            {
                if ((this.mUIItem5Window == null))
                {
                    this.mUIItem5Window = new UIItem5Window(this);
                }
                return this.mUIItem5Window;
            }
        }
        #endregion
        
        #region Fields
        private UITextBox1Window mUITextBox1Window;
        
        private UIButton1Window mUIButton1Window;
        
        private UIItem5Window mUIItem5Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBox1Edit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIButton1Window : WinWindow
    {
        
        public UIButton1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIButton1Button
        {
            get
            {
                if ((this.mUIButton1Button == null))
                {
                    this.mUIButton1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIButton1Button.SearchProperties[WinButton.PropertyNames.Name] = "button1";
                    this.mUIButton1Button.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem5Window : WinWindow
    {
        
        public UIItem5Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "label1";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinText UIItem5Text
        {
            get
            {
                if ((this.mUIItem5Text == null))
                {
                    this.mUIItem5Text = new WinText(this);
                    #region Search Criteria
                    //this.mUIItem5Text.SearchProperties[WinText.PropertyNames.Name] = "-5";
                    this.mUIItem5Text.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIItem5Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem5Text;
        #endregion
    }
}
